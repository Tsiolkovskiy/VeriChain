import React, { useState, useEffect } from 'react';

// --- –¢–ò–ü–ò–ó–ê–¶–ò–Ø –î–ê–ù–ù–´–• ---
// –¢–∏–ø –¥–ª—è —Ñ–∞–π–ª–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞
interface EvidenceFile {
  id: string;
  name: string;
  url: string;
  uploadDate: string;
}

// –¢–∏–ø –¥–ª—è —á–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥—ã
interface TeamMemberProps {
  name: string;
  role: string;
  imageUrl: string;
}

// --- –ú–û–ö-–ö–õ–ò–ï–ù–¢ S3 ---
// –≠—Ç–æ –∏–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å AWS S3. –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∏ –±—ã
// –≤—ã–∑–æ–≤—ã –∫ –≤–∞—à–µ–º—É –±—ç–∫–µ–Ω–¥—É –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –∫ AWS S3 SDK.
const s3MockClient = {
  // –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
  listFiles: async (): Promise<EvidenceFile[]> => {
    console.log("S3_MOCK: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...");
    const storedFiles = localStorage.getItem('s3-mock-files');
    const initialFiles: EvidenceFile[] = [
        { id: 'initial-1', name: 'case-001-photo.jpg', url: 's3://verichain-bucket/case-001-photo.jpg', uploadDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString() },
        { id: 'initial-2', name: 'witness-video.mp4', url: 's3://verichain-bucket/witness-video.mp4', uploadDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString() },
    ];
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –≤ localStorage –Ω–∏—á–µ–≥–æ –Ω–µ—Ç
    return storedFiles ? JSON.parse(storedFiles) : initialFiles;
  },

  // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
  uploadFile: async (file: File, files: EvidenceFile[]): Promise<EvidenceFile> => {
    console.log(`S3_MOCK: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ "${file.name}"...`);
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 500)); 
    const newEvidence: EvidenceFile = {
      id: `file-${Date.now()}`,
      name: file.name,
      url: `s3://verichain-bucket/${file.name}`,
      uploadDate: new Date().toISOString(),
    };
    const updatedFiles = [...files, newEvidence];
    localStorage.setItem('s3-mock-files', JSON.stringify(updatedFiles));
    console.log("S3_MOCK: –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.", newEvidence);
    return newEvidence;
  },

  // –ò–º–∏—Ç–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
  deleteFile: async (fileId: string, files: EvidenceFile[]): Promise<string> => {
    console.log(`S3_MOCK: –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å id "${fileId}"...`);
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 300));
    const updatedFiles = files.filter(f => f.id !== fileId);
    localStorage.setItem('s3-mock-files', JSON.stringify(updatedFiles));
    console.log("S3_MOCK: –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.");
    return fileId;
  },
};


// --- –ö–û–ú–ü–û–ù–ï–ù–¢–´ –°–õ–ê–ô–î–û–í ---

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –ò–∫–æ–Ω–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–∞
const LogoIcon: React.FC = () => <div className="logo-icon mx-auto mb-4"></div>;

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 1 - –¢–∏—Ç—É–ª—å–Ω—ã–π
const TitleSlide: React.FC = () => (
  <section id="slide1" className="section-full bg-gradient-to-br from-gray-900 to-black">
    <div className="mb-8">
      <LogoIcon />
      <h1 className="text-5xl md:text-7xl font-extrabold text-white">VeriChain Evidence Ledger</h1>
    </div>
    <p className="text-2xl md:text-4xl font-semibold text-red-400 mt-4">
      "Evidence that can‚Äôt disappear"
    </p>
  </section>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 2 - –ü—Ä–æ–±–ª–µ–º–∞
const ProblemSlide: React.FC = () => (
  <section id="slide2" className="section-full bg-gray-900">
    <h2 className="text-4xl md:text-5xl font-bold mb-12 text-white">–ü—Ä–æ–±–ª–µ–º–∞: –£—è–∑–≤–∏–º–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤</h2>
    <div className="max-w-xl mx-auto mb-8">
      <img src="https://placehold.co/600x400/1f2937/d1d5db?text=–¶–∏—Ñ—Ä–æ–≤—ã–µ+—É–ª–∏–∫–∏+–ø–æ–¥+–º–∏–∫—Ä–æ—Å–∫–æ–ø–æ–º" alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É—é—â–µ–µ –∞–Ω–∞–ª–∏–∑ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —É–ª–∏–∫" className="rounded-xl shadow-lg w-full h-auto object-cover" />
    </div>
    <p className="text-xl md:text-2xl font-medium text-gray-300 max-w-2xl mx-auto">
      "–í —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ –∫–∞–∂–¥–∞—è –¥–µ—Ç–∞–ª—å –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–∫–∞–∂–µ–Ω–∞."
    </p>
    <p className="text-lg md:text-xl text-gray-400 mt-4 max-w-3xl mx-auto">
      –ë–µ–∑ –Ω–µ–æ–ø—Ä–æ–≤–µ—Ä–∂–∏–º–æ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–µ–¥—É–∫—Ü–∏–∏, –∏—Å—Ç–∏–Ω–∞ –æ—Å—Ç–∞–µ—Ç—Å—è —Å–∫—Ä—ã—Ç–æ–π –∑–∞ —à—É–º–æ–º –¥–∞–Ω–Ω—ã—Ö.
    </p>
  </section>
);

// --- –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –°–õ–ê–ô–î-–î–ï–ú–û ---
// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 3 - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –†–µ—à–µ–Ω–∏–µ (–ú–µ–Ω–µ–¥–∂–µ—Ä –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤)
const EvidenceManagerSlide: React.FC = () => {
  const [files, setFiles] = useState<EvidenceFile[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [isUploading, setIsUploading] = useState<boolean>(false);

  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const fetchFiles = async () => {
      setIsLoading(true);
      const fileList = await s3MockClient.listFiles();
      setFiles(fileList);
      setIsLoading(false);
    };
    fetchFiles();
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const fileToUpload = event.target.files?.[0];
    if (!fileToUpload) return;

    setIsUploading(true);
    await s3MockClient.uploadFile(fileToUpload, files);
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    const updatedFiles = await s3MockClient.listFiles();
    setFiles(updatedFiles);
    setIsUploading(false);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
  const handleFileDelete = async (fileId: string) => {
    await s3MockClient.deleteFile(fileId, files);
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    const updatedFiles = await s3MockClient.listFiles();
    setFiles(updatedFiles);
  };

  return (
    <section id="slide3" className="section-full bg-gray-800">
      <h2 className="text-4xl md:text-5xl font-bold mb-8 text-white">–†–µ—à–µ–Ω–∏–µ –≤ –¥–µ–π—Å—Ç–≤–∏–∏: –•—Ä–∞–Ω–∏–ª–∏—â–µ —É–ª–∏–∫</h2>
      <div className="w-full max-w-4xl bg-gray-900 p-6 rounded-xl shadow-2xl border border-gray-700">
        <div className="flex justify-between items-center mb-4">
            <h3 className="text-2xl font-semibold text-white">–§–∞–π–ª—ã –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ (S3 Bucket)</h3>
            <label className={`bg-red-600 text-white font-bold py-2 px-4 rounded-lg cursor-pointer hover:bg-red-700 transition ${isUploading ? 'opacity-50 cursor-not-allowed' : ''}`}>
                {isUploading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : 'üîó –ó–∞–≥—Ä—É–∑–∏—Ç—å —É–ª–∏–∫—É'}
                <input type="file" className="hidden" onChange={handleFileUpload} disabled={isUploading} />
            </label>
        </div>
        
        <div className="h-96 overflow-y-auto pr-2">
            {isLoading ? (
                <p className="text-gray-400 text-center py-10">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ S3...</p>
            ) : files.length === 0 ? (
                <p className="text-gray-400 text-center py-10">–•—Ä–∞–Ω–∏–ª–∏—â–µ –ø—É—Å—Ç–æ. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–µ—Ä–≤–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ.</p>
            ) : (
                <table className="w-full text-left">
                    <thead className="sticky top-0 bg-gray-900">
                        <tr>
                            <th className="p-2 text-gray-300">–ò–º—è —Ñ–∞–π–ª–∞</th>
                            <th className="p-2 text-gray-300">–î–∞—Ç–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏</th>
                            <th className="p-2 text-gray-300 text-right">–î–µ–π—Å—Ç–≤–∏–µ</th>
                        </tr>
                    </thead>
                    <tbody>
                        {files.map(file => (
                            <tr key={file.id} className="border-b border-gray-700 hover:bg-gray-800">
                                <td className="p-3 font-mono text-white">{file.name}</td>
                                <td className="p-3 text-gray-400">{new Date(file.uploadDate).toLocaleString('ru-RU')}</td>
                                <td className="p-3 text-right">
                                    <button onClick={() => handleFileDelete(file.id)} className="text-red-500 hover:text-red-400 font-bold">
                                        –£–¥–∞–ª–∏—Ç—å
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            )}
        </div>
      </div>
    </section>
  );
};


// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 4 - –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è
const TechnologySlide: React.FC = () => (
  <section id="slide4" className="section-full bg-gray-900">
    <h2 className="text-4xl md:text-5xl font-bold mb-12 text-white">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ—Å–Ω–æ–≤–∞</h2>
    <div className="flex flex-col md:flex-row items-center justify-center max-w-4xl mx-auto text-gray-300 text-lg md:text-xl">
      <div className="flex flex-col items-center mx-4 my-4 md:my-0">
        <span className="tech-icon">üì±</span>
        <span className="font-mono">React/TS Frontend</span>
      </div>
      <span className="tech-arrow">‚Üí</span>
      <div className="flex flex-col items-center mx-4 my-4 md:my-0">
        <span className="tech-icon">‚òÅÔ∏è</span>
        <span className="font-mono">AWS S3 Storage</span>
      </div>
      <span className="tech-arrow">‚Üí</span>
      <div className="flex flex-col items-center mx-4 my-4 md:my-0">
        <span className="tech-icon">‚õìÔ∏è</span>
        <span className="font-mono">–ë–ª–æ–∫—á–µ–π–Ω XION</span>
      </div>
    </div>
    <p className="text-lg md:text-xl text-gray-400 mt-8 max-w-3xl mx-auto">
      –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ React, –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ S3/IPFS –∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º–∞—è –∑–∞–ø–∏—Å—å –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –≤ –±–ª–æ–∫—á–µ–π–Ω–µ XION.
    </p>
  </section>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 5 - –°—Ü–µ–Ω–∞—Ä–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const UseCaseSlide: React.FC = () => (
  <section id="slide5" className="section-full bg-gray-800">
    <h2 className="text-4xl md:text-5xl font-bold mb-12 text-white">–°—Ü–µ–Ω–∞—Ä–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: –û—Ç —Ñ–∏–∫—Å–∞—Ü–∏–∏ –¥–æ —Å—É–¥–∞</h2>
    <div className="max-w-2xl mx-auto">
      <div className="use-case-step">
        <h3 className="text-xl font-bold text-red-400 mb-2">–®–∞–≥ 1: –§–∏–∫—Å–∞—Ü–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏—è</h3>
        <p className="text-gray-300">–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π —Å–Ω–∏–º–∞–µ—Ç –≤–∏–¥–µ–æ, –∑–∞–≥—Ä—É–∂–∞–µ—Ç –µ–≥–æ –≤ S3 —á–µ—Ä–µ–∑ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –•–µ—à —Ñ–∞–π–ª–∞ –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ S3 –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –±–ª–æ–∫—á–µ–π–Ω XION.</p>
      </div>
      <div className="use-case-step">
        <h3 className="text-xl font-bold text-red-400 mb-2">–®–∞–≥ 2: –ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–æ–∫—É—Ä–æ—Ä—É</h3>
        <p className="text-gray-300">–ü—Ä–∞–≤–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É –≤ S3 –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø—Ä–æ–∫—É—Ä–æ—Ä—É. –≠—Ç–∞ –ø–µ—Ä–µ–¥–∞—á–∞ (—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä NFT) –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ.</p>
      </div>
      <div className="use-case-step">
        <h3 className="text-xl font-bold text-red-400 mb-2">–®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Å—É–¥–µ</h3>
        <p className="text-gray-300">–°—É–¥ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –≤ –±–ª–æ–∫—á–µ–π–Ω–µ, –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É –≤ S3 –∏ —É–±–µ–∂–¥–∞–µ—Ç—Å—è –≤ –µ–≥–æ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –ø–æ —Ö–µ—à—É.</p>
      </div>
    </div>
  </section>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 6 - –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ
const AdvantageSlide: React.FC = () => (
  <section id="slide6" className="section-full bg-gray-900">
    <h2 className="text-4xl md:text-5xl font-bold mb-12 text-white">–ù–∞—à–µ –∫–æ–Ω–∫—É—Ä—Å–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ</h2>
    <div className="max-w-3xl mx-auto text-lg md:text-xl text-gray-300 space-y-6">
      <div className="flex items-center justify-center">
        <span className="text-5xl text-red-500 mr-4">üõ°Ô∏è</span>
        <p>
          <span className="font-bold text-white">–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å:</span> 100% –∞—É–¥–∏—Ä—É–µ–º—ã–π —Å–ª–µ–¥ (audit trail) –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –∏—Å–∫–ª—é—á–∞—é—â–∏–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–¥–µ–ª–∫–∏ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è.
        </p>
      </div>
      <div className="flex items-center justify-center">
        <span className="text-5xl text-red-500 mr-4">‚úÖ</span>
        <p>
          <span className="font-bold text-white">–ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Ö–∞–∫–∞—Ç–æ–Ω–∞:</span> –ò—Å–ø–æ–ª—å–∑—É–µ–º XION Mobile Kit (Dave), zkTLS –∏ –º–æ–±–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—è –ø–µ—Ä–µ–¥–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã XION.
        </p>
      </div>
    </div>
  </section>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –ß–ª–µ–Ω –∫–æ–º–∞–Ω–¥—ã
const TeamMember: React.FC<TeamMemberProps> = ({ name, role, imageUrl }) => (
  <div className="flex flex-col items-center bg-gray-700 p-6 rounded-xl shadow-md">
    <img src={imageUrl} alt={`–§–æ—Ç–æ ${name}`} className="rounded-full w-32 h-32 object-cover mb-4" />
    <h3 className="text-xl font-bold text-white">{name}</h3>
    <p className="text-gray-300">{role}</p>
  </div>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 7 - –ö–æ–º–∞–Ω–¥–∞
const TeamSlide: React.FC = () => {
  const teamMembers: TeamMemberProps[] = [
    { name: '–ò–º—è –Æ—Ä–∏—Å—Ç–∞', role: '–Æ—Ä–∏—Å—Ç-—ç–∫—Å–ø–µ—Ä—Ç', imageUrl: 'https://placehold.co/120x120/4b5563/d1d5db?text=–§–æ—Ç–æ' },
    { name: '–ò–º—è –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞', role: '–í–µ–¥—É—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', imageUrl: 'https://placehold.co/120x120/4b5563/d1d5db?text=–§–æ—Ç–æ' },
    { name: '–ò–º—è –î–∏–∑–∞–π–Ω–µ—Ä–∞', role: 'UI/UX –î–∏–∑–∞–π–Ω–µ—Ä', imageUrl: 'https://placehold.co/120x120/4b5563/d1d5db?text=–§–æ—Ç–æ' },
  ];

  return (
    <section id="slide7" className="section-full bg-gray-800">
      <h2 className="text-4xl md:text-5xl font-bold mb-12 text-white">–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞</h2>
      <div className="grid md:grid-cols-3 gap-8 max-w-4xl mx-auto">
        {teamMembers.map(member => <TeamMember key={member.name} {...member} />)}
      </div>
    </section>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 8 - –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞
const RoadmapSlide: React.FC = () => (
  <section id="slide8" className="section-full bg-gray-900">
    <h2 className="text-4xl md:text-5xl font-bold mb-12 text-white">–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞</h2>
    <div className="max-w-2xl mx-auto text-lg md:text-xl text-gray-300">
      <div className="roadmap-item">
        <span className="font-bold text-white">–ò–¥–µ–∞—Ç–æ–Ω:</span> –ö–æ–Ω—Ü–µ–ø—Ü–∏—è VeriChain Evidence Ledger.
      </div>
      <div className="roadmap-item">
        <span className="font-bold text-white">–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ 1:</span> MVP —Å –±–∞–∑–æ–≤–æ–π –∑–∞–ø–∏—Å—å—é —Ö–µ—à–µ–π –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –≤ –±–ª–æ–∫—á–µ–π–Ω –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ S3.
      </div>
      <div className="roadmap-item">
        <span className="font-bold text-white">–§–∏–Ω–∞–ª:</span> –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∏ NFT –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º –≤ S3.
      </div>
    </div>
  </section>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç: –°–ª–∞–π–¥ 9 - –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
const CtaSlide: React.FC = () => (
  <section id="slide9" className="section-full bg-gradient-to-br from-red-700 to-red-900">
    <h2 className="text-4xl md:text-6xl font-extrabold text-white mb-8">
      Stop evidence tampering.
    </h2>
    <h2 className="text-4xl md:text-6xl font-extrabold text-white mb-12">
      Build trust with VeriChain.
    </h2>
    <a href="#" className="bg-white text-red-700 px-10 py-4 rounded-lg text-xl font-bold hover:bg-gray-200 transition shadow-lg">
      –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
    </a>
  </section>
);

// --- –ì–õ–ê–í–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
const App: React.FC = () => {
  const styles = `
    body {
        font-family: 'Inter', sans-serif;
        background-color: #0f172a; /* slate-900 */
        color: #f8fafc; /* slate-50 */
        scroll-behavior: smooth;
    }
    h1, h2, h3 {
        font-weight: 800;
        color: #f8fafc;
    }
    .section-full {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 4rem 1rem;
        text-align: center;
    }
    .logo-icon {
        display: inline-block;
        position: relative;
        width: 40px;
        height: 40px;
        border: 4px solid #ef4444; /* red-500 */
        border-radius: 50%;
        transform: rotate(45deg);
    }
    .logo-icon::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 20px;
        height: 4px;
        background-color: #ef4444; /* red-500 */
        transform: translate(-50%, -50%) rotate(-45deg);
    }
    .logo-icon::after {
        content: '‚úÖ';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-45deg);
        font-size: 1.5rem;
        color: #22c55e; /* green-500 */
    }
    .tech-arrow {
        font-size: 2rem;
        color: #ef4444; /* red-500 */
        margin: 0 1rem;
    }
    .tech-icon {
        font-size: 3rem;
        color: #f8fafc; /* slate-50 */
        margin-bottom: 0.5rem;
    }
    .use-case-step {
        background-color: #1e293b; /* slate-800 */
        border-radius: 1rem;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        text-align: left;
        position: relative;
        border: 1px solid #334155; /* slate-700 */
    }
    .use-case-step::before {
        content: '';
        position: absolute;
        top: -10px;
        left: 50%;
        transform: translateX(-50%) rotate(45deg);
        width: 20px;
        height: 20px;
        background-color: #1e293b; /* slate-800 */
        border-top: 1px solid #334155;
        border-left: 1px solid #334155;
    }
    .use-case-step:first-child::before {
        display: none;
    }
    .roadmap-item {
        position: relative;
        padding-left: 2rem;
        margin-bottom: 1rem;
        text-align: left;
    }
    .roadmap-item::before {
        content: '‚óè';
        position: absolute;
        left: 0;
        color: #ef4444; /* red-500 */
        font-size: 1.2rem;
        top: 0.2rem;
    }
  `;

  return (
    <>
      <style>{styles}</style>
      <main className="antialiased">
        <TitleSlide />
        <ProblemSlide />
        <EvidenceManagerSlide /> {/* <-- –ó–∞–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç–∏—á–Ω—ã–π —Å–ª–∞–π–¥ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π */}
        <TechnologySlide />
        <UseCaseSlide />
        <AdvantageSlide />
        <TeamSlide />
        <RoadmapSlide />
        <CtaSlide />
      </main>
    </>
  );
};

export default App;
